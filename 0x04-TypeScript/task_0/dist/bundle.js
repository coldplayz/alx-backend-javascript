!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t){var n={firstName:"Greenbel",lastName:"Eleghasim",age:1e3,location:"Nigeria"},r={firstName:"Rahab",lastName:"Mary",age:1e3,location:"Kenya"},a=document.getElementsByTagName("body")[0],o=document.createElement("table"),i=document.createElement("tr"),l=document.createElement("th");l.innerHTML="First Name";var d=document.createElement("th");d.innerHTML="Location",i.appendChild(l),i.appendChild(d),o.appendChild(i);var c=document.createElement("tr"),u=document.createElement("td");u.innerHTML=n.firstName;var m=document.createElement("td");m.innerHTML=n.location,c.appendChild(u),c.appendChild(m),o.appendChild(c);var p=document.createElement("tr"),f=document.createElement("td");f.innerHTML=r.firstName;var s=document.createElement("td");s.innerHTML=r.location,p.appendChild(f),p.appendChild(s),o.appendChild(p),a.appendChild(o)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,